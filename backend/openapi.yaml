openapi: 3.0.3
info:
  title: 動漫猜謎遊戲 API
  description: 用於管理動漫猜謎遊戲的 API，包含遊戲創建、問題管理、玩家互動等功能。使用本地 anime_path.json 作為題目來源。
  version: 2.0.0
servers:
  - url: http://localhost:3000/api
    description: 本地開發環境
  - url: https://api.example.com/api
    description: 生產環境

tags:
  - name: 遊戲管理
    description: 創建、獲取和管理遊戲相關操作
  - name: 玩家管理
    description: 添加玩家和獲取玩家排名相關操作
  - name: 問題管理
    description: 管理問題相關操作（基於本地動漫資料）
  - name: 系統管理
    description: 系統健康檢查和動漫資料管理

paths:
  # 系統相關
  /:
    get:
      summary: API 根路徑
      description: 檢查 API 是否正常運行
      tags:
        - 系統管理
      responses:
        '200':
          description: API 正常運行
          content:
            text/plain:
              schema:
                type: string
                example: "動漫猜謎遊戲 API 正在運行"

  /health:
    get:
      summary: 健康檢查
      description: 檢查 API 和動漫資料的健康狀態
      tags:
        - 系統管理
      responses:
        '200':
          description: 系統健康
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "API 運行正常"
                  animeCount:
                    type: integer
                    description: 可用動漫數量
                    example: 16
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-06-03T10:30:00.000Z"
        '500':
          description: 系統異常
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # 遊戲管理
  /games:
    post:
      summary: 創建新遊戲
      description: 創建一個新的動漫猜謎遊戲
      tags:
        - 遊戲管理
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gameTitle:
                  type: string
                  description: 遊戲標題
                  example: "Anime Guessing Game"
                settings:
                  $ref: '#/components/schemas/GameSettings'
                hostId:
                  type: string
                  description: 主持人ID
                  example: "host123456"
      responses:
        '201':
          description: 遊戲創建成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "遊戲創建成功"
                  game:
                    $ref: '#/components/schemas/Game'
        '500':
          description: 伺服器錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /games/{gameId}:
    get:
      summary: 獲取特定遊戲資訊
      description: 根據遊戲ID獲取遊戲詳細資訊，包含遊戲中的玩家排名
      tags:
        - 遊戲管理
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
          description: 遊戲唯一ID
          example: "a1b2c3d4"
      responses:
        '200':
          description: 成功獲取遊戲資訊
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  game:
                    allOf:
                      - $ref: '#/components/schemas/Game'
                      - type: object
                        properties:
                          players:
                            type: array
                            items:
                              $ref: '#/components/schemas/PlayerRanking'
                          questionCount:
                            type: integer
                            description: 遊戲中的問題數量
                            example: 10
        '404':
          description: 找不到遊戲
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 伺服器錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /games/{gameId}/settings:
    patch:
      summary: 更新遊戲設定
      description: 更新指定遊戲的設定參數（只能在遊戲開始前）
      tags:
        - 遊戲管理
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
          description: 遊戲唯一ID
          example: "a1b2c3d4"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                settings:
                  $ref: '#/components/schemas/GameSettings'
      responses:
        '200':
          description: 遊戲設定更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "遊戲設定更新成功"
                  game:
                    $ref: '#/components/schemas/Game'
        '400':
          description: 請求錯誤，可能是遊戲已開始
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 找不到遊戲
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 伺服器錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /games/{gameId}/players:
    post:
      summary: 添加玩家到遊戲
      description: 將新玩家添加到指定的遊戲中
      tags:
        - 玩家管理
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
          description: 遊戲唯一ID
          example: "a1b2c3d4"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 玩家名稱
                  example: "player1"
              required:
                - username
      responses:
        '201':
          description: 成功添加玩家
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "成功加入遊戲"
                  player:
                    $ref: '#/components/schemas/Player'
        '400':
          description: 請求錯誤，可能是缺少用戶名或遊戲已開始
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 找不到遊戲
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: 衝突，用戶名已存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 伺服器錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    get:
      summary: 獲取遊戲玩家
      description: 獲取指定遊戲中的所有玩家，按分數排序
      tags:
        - 玩家管理
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
          description: 遊戲唯一ID
          example: "a1b2c3d4"
      responses:
        '200':
          description: 成功獲取玩家列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  players:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlayerRanking'
        '404':
          description: 找不到遊戲
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 伺服器錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /games/{gameId}/start:
    post:
      summary: 開始遊戲
      description: 將指定遊戲的狀態設為活動並自動從本地資料選擇隨機問題
      tags:
        - 遊戲管理
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
          description: 遊戲唯一ID
          example: "a1b2c3d4"
      responses:
        '200':
          description: 遊戲成功開始
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "遊戲已開始"
                  game:
                    $ref: '#/components/schemas/Game'
                  totalQuestions:
                    type: integer
                    description: 遊戲中的問題總數
                    example: 10
        '400':
          description: 請求錯誤，可能是遊戲已開始、無玩家或動漫資料不足
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 找不到遊戲
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 伺服器錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /games/{gameId}/end:
    post:
      summary: 結束遊戲
      description: 將指定遊戲的狀態設為已完成
      tags:
        - 遊戲管理
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
          description: 遊戲唯一ID
          example: "a1b2c3d4"
      responses:
        '200':
          description: 遊戲成功結束
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "遊戲已結束"
                  game:
                    $ref: '#/components/schemas/Game'
                  players:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlayerRanking'
        '400':
          description: 請求錯誤，可能是遊戲不在活動狀態
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 找不到遊戲
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 伺服器錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /games/{gameId}/results:
    get:
      summary: 獲取遊戲結果
      description: 獲取已結束遊戲的結果和統計數據
      tags:
        - 遊戲管理
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
          description: 遊戲唯一ID
          example: "a1b2c3d4"
      responses:
        '200':
          description: 成功獲取遊戲結果
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  game:
                    $ref: '#/components/schemas/Game'
                  players:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlayerRanking'
                  gameStats:
                    $ref: '#/components/schemas/GameStats'
        '400':
          description: 請求錯誤，可能是遊戲尚未結束
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 找不到遊戲
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 伺服器錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # 問題管理（基於本地資料）
  /anime:
    get:
      summary: 獲取可用動漫列表
      description: 獲取本地 anime_path.json 中的所有可用動漫
      tags:
        - 問題管理
      responses:
        '200':
          description: 成功獲取動漫列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  totalAnime:
                    type: integer
                    description: 總動漫數量
                    example: 16
                  animeList:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          description: 動漫標題
                          example: "Chainsaw Man"
                        imageSetCount:
                          type: integer
                          description: 圖片集數量
                          example: 4
                        imagePaths:
                          type: array
                          description: 圖片資料夾路徑列表
                          items:
                            type: string
                          example: 
                            - ".\\create_data\\dataset\\Chainsaw Man\\Chainsaw Man_1"
                            - ".\\create_data\\dataset\\Chainsaw Man\\Chainsaw Man_2"
        '500':
          description: 伺服器錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /games/{gameId}/question:
    get:
      summary: 獲取當前問題
      description: 獲取指定遊戲的當前問題和圖片
      tags:
        - 問題管理
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
          description: 遊戲唯一ID
          example: "a1b2c3d4"
      responses:
        '200':
          description: 成功獲取當前問題
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  questionOrder:
                    type: integer
                    description: 問題順序編號
                    example: 1
                  animeTitle:
                    type: string
                    description: 動漫標題
                    example: "Chainsaw Man"
                  imagePath:
                    type: string
                    description: 圖片資料夾路徑
                    example: ".\\create_data\\dataset\\Chainsaw Man\\Chainsaw Man_1"
                  images:
                    type: array
                    description: 圖片檔案完整路徑列表
                    items:
                      type: string
                    example: 
                      - "C:\\project\\create_data\\dataset\\Chainsaw Man\\Chainsaw Man_1\\image1.jpg"
                      - "C:\\project\\create_data\\dataset\\Chainsaw Man\\Chainsaw Man_1\\image2.jpg"
                  totalQuestions:
                    type: integer
                    description: 問題總數
                    example: 10
                  status:
                    type: string
                    description: 問題狀態
                    enum: [pending, active, completed]
                    example: "active"
        '400':
          description: 請求錯誤，可能是遊戲不在活動狀態
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 找不到遊戲、問題或圖片檔案
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 伺服器錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /games/{gameId}/question/next:
    post:
      summary: 開始下一個問題
      description: 完成當前問題並開始下一個問題
      tags:
        - 問題管理
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
          description: 遊戲唯一ID
          example: "a1b2c3d4"
      responses:
        '200':
          description: 成功切換到下一個問題或遊戲結束
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    description: 成功開始下一題
                    properties:
                      success:
                        type: boolean
                        example: true
                      message:
                        type: string
                        example: "開始下一個問題"
                      questionNumber:
                        type: integer
                        description: 新的問題編號
                        example: 2
                      totalQuestions:
                        type: integer
                        description: 問題總數
                        example: 10
                  - type: object
                    description: 遊戲結束
                    properties:
                      success:
                        type: boolean
                        example: true
                      message:
                        type: string
                        example: "遊戲已結束"
                      gameComplete:
                        type: boolean
                        example: true
                      finalRankings:
                        type: array
                        items:
                          $ref: '#/components/schemas/PlayerRanking'
        '400':
          description: 請求錯誤，可能是遊戲不在活動狀態
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 找不到遊戲
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 伺服器錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /games/{gameId}/question/answer:
    post:
      summary: 提交答案
      description: 提交玩家對當前問題的答案和分數
      tags:
        - 問題管理
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
          description: 遊戲唯一ID
          example: "a1b2c3d4"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 玩家名稱
                  example: "player1"
                score:
                  type: integer
                  description: 本題獲得的分數
                  example: 85
              required:
                - username
                - score
      responses:
        '200':
          description: 成功提交答案
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "分數更新成功"
                  score:
                    type: integer
                    description: 本題獲得的分數
                    example: 85
                  totalScore:
                    type: integer
                    description: 玩家總分
                    example: 285
        '400':
          description: 請求錯誤，可能是缺少必要欄位或遊戲不在活動狀態
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 找不到遊戲或玩家
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 伺服器錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /games/{gameId}/rankings:
    get:
      summary: 獲取玩家排名
      description: 獲取指定遊戲中玩家的即時排名
      tags:
        - 玩家管理
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
          description: 遊戲唯一ID
          example: "a1b2c3d4"
      responses:
        '200':
          description: 成功獲取玩家排名
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  rankings:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlayerRanking'
        '404':
          description: 找不到遊戲
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 伺服器錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Game:
      type: object
      properties:
        gameId:
          type: string
          description: 遊戲唯一ID
          example: "a1b2c3d4"
        gameTitle:
          type: string
          description: 遊戲標題
          example: "Anime Guessing Game"
        status:
          type: string
          description: 遊戲狀態
          enum: [waiting, active, finished]
          example: "waiting"
        settings:
          $ref: '#/components/schemas/GameSettings'
        players:
          type: array
          description: 遊戲玩家列表
          items:
            $ref: '#/components/schemas/Player'
        questions:
          type: array
          description: 遊戲問題列表
          items:
            $ref: '#/components/schemas/GameQuestion'
        currentQuestionNumber:
          type: integer
          description: 當前問題編號 (1-based)
          example: 0
        startedAt:
          type: string
          format: date-time
          description: 遊戲開始時間
          example: "2025-06-03T10:30:00Z"
        finishedAt:
          type: string
          format: date-time
          description: 遊戲結束時間
          example: null
        createdAt:
          type: string
          format: date-time
          description: 遊戲創建時間
          example: "2025-06-03T10:00:00Z"
        hostId:
          type: string
          description: 主持人ID
          example: "host123456"
    
    GameSettings:
      type: object
      properties:
        revealInterval:
          type: integer
          description: 每次圖片顯示的時間間隔（秒）
          default: 5
          example: 5
        answerTime:
          type: integer
          description: 所有圖片顯示後的答題時間（秒）
          default: 20
          example: 20
        maxPointsPerQuestion:
          type: integer
          description: 每題最高分數
          default: 100
          example: 100
        rounds:
          type: integer
          description: 回合數（問題數）
          default: 10
          example: 10
    
    Player:
      type: object
      properties:
        username:
          type: string
          description: 玩家名稱
          example: "player1"
        score:
          type: integer
          description: 玩家當前分數
          example: 285
          default: 0
        joinedAt:
          type: string
          format: date-time
          description: 玩家加入時間
          example: "2025-06-03T10:15:00Z"
    
    PlayerRanking:
      type: object
      properties:
        rank:
          type: integer
          description: 玩家排名
          example: 1
        username:
          type: string
          description: 玩家名稱
          example: "player1"
        score:
          type: integer
          description: 玩家分數
          example: 285
    
    GameQuestion:
      type: object
      description: 遊戲中的問題（內嵌在遊戲文件中）
      properties:
        animeTitle:
          type: string
          description: 動漫名稱
          example: "Chainsaw Man"
        imagePath:
          type: string
          description: 使用的圖片資料夾路徑
          example: ".\\create_data\\dataset\\Chainsaw Man\\Chainsaw Man_1"
        order:
          type: integer
          description: 問題在遊戲中的順序
          example: 1
        status:
          type: string
          description: 問題狀態
          enum: [pending, active, completed]
          example: "pending"
        activatedAt:
          type: string
          format: date-time
          description: 問題變為活動狀態的時間
          example: null
        completedAt:
          type: string
          format: date-time
          description: 問題完成的時間
          example: null
    
    GameStats:
      type: object
      properties:
        totalQuestions:
          type: integer
          description: 遊戲問題總數
          example: 10
        averageScore:
          type: integer
          description: 平均分數
          example: 220
        gameDuration:
          type: integer
          description: 遊戲持續時間（秒）
          example: 600
    
    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          description: 錯誤訊息
          example: "找不到遊戲"
        error:
          type: string
          description: 詳細錯誤資訊
          example: "Game with id a1b2c3d4 not found"